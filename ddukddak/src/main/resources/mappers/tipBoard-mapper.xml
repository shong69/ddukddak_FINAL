<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ddukddak.board.model.mapper.tipBoardMapper">
	
		<resultMap type="Board" id="board_rm">
	
		<!-- id 태그 : PK 역할을 하는 컬럼, 필드를 작성하는 태그 -->
		<id property="boardNo" column="BOARD_NO"/>
		
		<!-- 
			<< collection 태그 >>
			select로 조회된 결과를 컬렉션(List)에 담아
			지정된 필드에 세팅
			
			property : List를 담을 DTO의 필드명
			select : 실행할 select의 id
			column : 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
			javaType : List(컬렉션)의 타입을 지정
			ofType : List(컬렉션)의 제네릭(타입 제한) 지정
		-->
		
		<!-- 해당 게시글 이미지 목록 조회 후 필드에 저장 -->
		<collection property="imageList" 
					select="selectImageList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="BoardImg"/>
	
		<!-- 해당 게시글 댓글 목록 조회 후 필드에 저장 -->
		<collection property="commentList"
					select="selectCommentList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="Comment" />
	</resultMap>
	
	<select id="selectTipList">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
		(SELECT UPLOAD_IMG_PATH || UPLOAD_IMG_RENAME FROM "UPLOAD_FILE" U WHERE C.BOARD_NO = U.BOARD_NO AND UPLOAD_IMG_ORDER = 0) THUMBNAIL,
		(SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = C.BOARD_NO) COMMENT_COUNT,
		(SELECT COUNT(*) FROM "BOARD_LIKE" L WHERE L.BOARD_NO = C.BOARD_NO) LIKE_COUNT,
		<![CDATA[
		CASE
			WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60 
			THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60 ) || '초 전'
			WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
			THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 ) || '분 전'
			WHEN SYSDATE - BOARD_WRITE_DATE < 1
			THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 ) || '시간 전'
			ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
		END BOARD_WRITE_DATE
		]]>
		FROM "COMMUNITY" C
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		ORDER BY 
			<choose>
            <when test="sort == 'latest'">
                BOARD_NO DESC
            </when>
            <when test="sort == 'views'">
                READ_COUNT DESC
            </when>
            <when test="sort == 'likeCount'">
                LIKE_COUNT DESC
            </when>
            <otherwise>
                BOARD_NO DESC
            </otherwise>
        </choose>
	</select>
	
	<delete id="tipLikeDelete">
		DELETE FROM "BOARD_LIKE" WHERE MEMBER_NO = #{memberNo} AND BOARD_NO = #{boardNo}
	</delete>
	
	<insert id="tipLikeInsert">
		INSERT INTO "BOARD_LIKE" VALUES (#{memberNo}, #{boardNo})
	</insert>
	
	<select id="selectLikeCount">
		SELECT COUNT(*) FROM "BOARD_LIKE" WHERE BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectBoard" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, MEMBER_NO, MEMBER_NICKNAME, READ_COUNT, PROFILE_IMG,
				TO_CHAR(BOARD_WRITE_DATE, 'YYYY"-"MM"-"DD HH24:MI:SS') BOARD_WRITE_DATE,
				TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"-"MM"-"DD HH24:MI:SS') BOARD_UPDATE_DATE,
				
				(SELECT COUNT(*) FROM "BOARD_LIKE"
				WHERE BOARD_NO = #{boardNo}) LIKE_COUNT,
				
				(SELECT COUNT(*) FROM "BOARD_LIKE"
				WHERE MEMBER_NO = #{memberNo}
				AND BOARD_NO = #{boardNo}) LIKE_CHECK
		
		FROM "COMMUNITY"
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_NO = #{boardNo}
	</select>
	
</mapper>
