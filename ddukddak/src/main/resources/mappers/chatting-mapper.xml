<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ddukddak.common.chatting.model.mapper.ChattingMapper">
	
	<!-- 채팅방 목록 조회 -->
	<!-- ChattingMapper.xml -->
		
	<select id="selectRoomList" parameterType="map">
		SELECT
		    R.CHATTING_NO,
		    M.LAST_MESSAGE,
		    TO_CHAR(NVL(M.SEND_TIME, R.CH_CREATE_DATE), 'YYYY.MM.DD') AS SEND_TIME,
		    CASE
		        WHEN #{isMember} = 'PARTNER' THEN
		            CASE
		                WHEN R.OPEN_CONTRACTOR_NO = #{memberNo} THEN R.PARTICIPANT_MEMBER_NO
		                WHEN R.PARTICIPANT_CONTRACTOR_NO = #{memberNo} THEN R.OPEN_MEMBER_NO
		            END
		        ELSE
		            CASE
		                WHEN R.OPEN_MEMBER_NO = #{memberNo} THEN R.PARTICIPANT_CONTRACTOR_NO
		                WHEN R.PARTICIPANT_MEMBER_NO = #{memberNo} THEN R.OPEN_CONTRACTOR_NO 
		            END
		    END AS TARGET_NO,
		    CASE
		        WHEN #{isMember} = 'PARTNER' THEN
		            CASE
		                WHEN R.OPEN_CONTRACTOR_NO = #{memberNo} THEN PARTICIPANT_MEMBER.PARTICIPANT_MEMBER_NICKNAME
		                WHEN R.PARTICIPANT_CONTRACTOR_NO = #{memberNo} THEN OPEN_MEMBER.OPEN_MEMBER_NICKNAME
		            END
		        ELSE
		            CASE
		                WHEN R.OPEN_MEMBER_NO = #{memberNo} THEN PARTICIPANT_CONTRACTOR.PARTICIPANT_CONTRACTOR_BUSINESS_NAME
		                WHEN R.PARTICIPANT_MEMBER_NO = #{memberNo} THEN OPEN_CONTRACTOR.OPEN_CONTRACTOR_BUSINESS_NAME
		            END
		    END AS TARGET_NICKNAME,
		    CASE
		        WHEN #{isMember} = 'PARTNER' THEN
		            CASE
		                WHEN R.OPEN_CONTRACTOR_NO = #{memberNo} THEN PARTICIPANT_MEMBER.PARTICIPANT_MEMBER_PROFILE_IMG
		                WHEN R.PARTICIPANT_CONTRACTOR_NO = #{memberNo} THEN OPEN_MEMBER.OPEN_MEMBER_PROFILE_IMG
		            END
		        ELSE
		            N'/images/default/main.jpg'
		    END AS TARGET_PROFILE,
		    M.NOT_READ_COUNT,
		    M.MAX_MESSAGE_NO
		FROM
		    CHATTING_ROOM R
		LEFT JOIN
		    (SELECT
		        M1.CHATTING_NO,
		        MAX(M1.MESSAGE_CONTENT) KEEP (DENSE_RANK LAST ORDER BY M1.SEND_TIME) AS LAST_MESSAGE,
		        MAX(M1.SEND_TIME) AS SEND_TIME,
		        COUNT(CASE WHEN M1.READ_FL = 'N' THEN 1 END) AS NOT_READ_COUNT,
		        MAX(M1.MESSAGE_NO) AS MAX_MESSAGE_NO
		     FROM
		        MESSAGE M1
		     WHERE
		        (#{isMember}  = 'PARTNER' AND M1.SENDER_TYPE = 'MEMBER' AND M1.TARGET_NO = #{memberNo}) 
		        OR (#{isMember}  = 'MEMBER' AND M1.SENDER_TYPE = 'PARTNER' AND M1.TARGET_NO = #{memberNo})
		     GROUP BY
		        M1.CHATTING_NO
		    ) M ON R.CHATTING_NO = M.CHATTING_NO
		LEFT JOIN
		    (SELECT
		        MEMBER_NO AS PARTICIPANT_MEMBER_NO,
		        MEMBER_NICKNAME AS PARTICIPANT_MEMBER_NICKNAME,
		        PROFILE_IMG AS PARTICIPANT_MEMBER_PROFILE_IMG
		     FROM
		        MEMBER
		    ) PARTICIPANT_MEMBER ON R.PARTICIPANT_MEMBER_NO = PARTICIPANT_MEMBER.PARTICIPANT_MEMBER_NO
		LEFT JOIN
		    (SELECT
		        MEMBER_NO AS OPEN_MEMBER_NO,
		        MEMBER_NICKNAME AS OPEN_MEMBER_NICKNAME,
		        PROFILE_IMG AS OPEN_MEMBER_PROFILE_IMG
		     FROM
		        MEMBER
		    ) OPEN_MEMBER ON R.OPEN_MEMBER_NO = OPEN_MEMBER.OPEN_MEMBER_NO
		LEFT JOIN
		    (SELECT
		        PARTNER_NO AS PARTICIPANT_CONTRACTOR_NO,
		        PARTNER_BUSINESS_NAME AS PARTICIPANT_CONTRACTOR_BUSINESS_NAME
		     FROM
		        PARTNER
		    ) PARTICIPANT_CONTRACTOR ON R.PARTICIPANT_CONTRACTOR_NO = PARTICIPANT_CONTRACTOR.PARTICIPANT_CONTRACTOR_NO
		LEFT JOIN
		    (SELECT
		        PARTNER_NO AS OPEN_CONTRACTOR_NO,
		        PARTNER_BUSINESS_NAME AS OPEN_CONTRACTOR_BUSINESS_NAME
		     FROM
		        PARTNER
		    ) OPEN_CONTRACTOR ON R.OPEN_CONTRACTOR_NO = OPEN_CONTRACTOR.OPEN_CONTRACTOR_NO
		WHERE
		    (
		        #{isMember} = 'PARTNER' AND (R.OPEN_CONTRACTOR_NO = #{memberNo} OR R.PARTICIPANT_CONTRACTOR_NO = #{memberNo})
		    )
		    OR
		    (
		        #{isMember} = 'MEMBER' AND (R.OPEN_MEMBER_NO = #{memberNo} OR R.PARTICIPANT_MEMBER_NO = #{memberNo})
		    )
		ORDER BY
		    M.MAX_MESSAGE_NO DESC NULLS LAST

	</select>

    
    


	<!-- 메시지 보내기 -->
	<insert id = "insertMessage">
		INSERT INTO "MESSAGE" 
		VALUES(SEQ_MESSAGE_NO.NEXTVAL, #{messageContent}, DEFAULT,#{senderNo}, #{senderType},#{targetNo}, #{targetType}, #{chattingNo}, DEFAULT)
	</insert>
	
    
	<!--                            일반회원                       -->
	<!-- [일반회원]채팅 상대 검색 -->
    <select id="selectTarget">
        SELECT PARTNER_NO, PARTNER_TEL, PARTNER_BUSINESS_NAME FROM PARTNER
        WHERE (PARTNER_TEL LIKE '%${query}%' OR PARTNER_BUSINESS_NAME LIKE '%${query}%')
        AND PARTNER_DEL_FL = 'N'
        AND PARTNER_TYPE=1
    </select>
	
	<!-- [일반회원]채팅 확인 -->
    <select id="checkChattingNo">
        SELECT NVL(SUM(CHATTING_NO),0) CHATTING_NO FROM CHATTING_ROOM
        WHERE (OPEN_MEMBER_NO = #{memberNo} AND PARTICIPANT_CONTRACTOR_NO = #{targetNo})
        OR (OPEN_CONTRACTOR_NO = #{targetNo} AND PARTICIPANT_MEMBER_NO = #{memberNo})
    </select>
    
	<!-- [일반회원]채팅방 만들기 -->
    <insert id="createChattingRoom" parameterType="map" useGeneratedKeys="true">
        <selectKey keyProperty="chattingNo" order="BEFORE" resultType="_int">
            SELECT SEQ_ROOM_NO.NEXTVAL FROM DUAL
        </selectKey>
        
        INSERT INTO CHATTING_ROOM (CHATTING_NO, CH_CREATE_DATE, OPEN_MEMBER_NO, PARTICIPANT_CONTRACTOR_NO)
        VALUES (#{chattingNo},SYSDATE, #{memberNo}, #{targetNo})
    </insert>
	
	<!-- [일반회원+ 시공사]채팅 기록 불러오기 -->
    <select id="selectMessageList">
        SELECT MESSAGE_NO, MESSAGE_CONTENT, READ_FL, SENDER_NO,SENDER_TYPE, TARGET_NO, TARGET_TYPE, CHATTING_NO,
        TO_CHAR(SEND_TIME, 'YYYY.MM.DD HH24:MI') SEND_TIME 
        FROM MESSAGE
        WHERE CHATTING_NO = #{chattingNo}
        ORDER BY MESSAGE_NO
    </select>

	<!-- [일반회원]내가 보내지 않은 글을 읽음 상태 변경 -->
	<update id = "updateReadFlag">
		UPDATE "MESSAGE" SET
		READ_FL = 'Y'
		WHERE CHATTING_NO = #{chattingNo}
		AND SENDER_TYPE = #{senderType}
		AND TARGET_NO = #{memberNo}
	</update>
	
	
	
	
	
	<!--                            시공사                       -->
	<!-- [시공사]채팅 상대 검색(완) -->
	<select id="IselectTarget">
        SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, PROFILE_IMG 
        FROM MEMBER
        WHERE (MEMBER_EMAIL LIKE '%${query}%' OR MEMBER_NICKNAME LIKE '%${query}%')
        AND MEMBER_DEL_FL = 'N'
    </select>
	<!-- [시공사]채팅 확인 -->
    <select id="IcheckChattingNo">
        SELECT NVL(SUM(CHATTING_NO),0) CHATTING_NO FROM CHATTING_ROOM
        WHERE (OPEN_MEMBER_NO = #{targetNo} AND PARTICIPANT_CONTRACTOR_NO = #{memberNo})
        OR (OPEN_CONTRACTOR_NO = #{memberNo} AND PARTICIPANT_MEMBER_NO = #{targetNo})
    </select>
    
	<!-- [시공사]채팅방 만들기 (완)-->
    <insert id="IcreateChattingRoom" parameterType="map" useGeneratedKeys="true">
        <selectKey keyProperty="chattingNo" order="BEFORE" resultType="_int">
            SELECT SEQ_ROOM_NO.NEXTVAL FROM DUAL
        </selectKey>
        
        INSERT INTO CHATTING_ROOM (CHATTING_NO, CH_CREATE_DATE, OPEN_CONTRACTOR_NO, PARTICIPANT_MEMBER_NO)
        VALUES (#{chattingNo},SYSDATE, #{memberNo}, #{targetNo})
    </insert>
		
	<!-- [시공사]내가 보내지 않은 글을 읽음 상태 변경(완) -->
	<update id = "IupdateReadFlag">
		UPDATE "MESSAGE" SET
		READ_FL = 'Y'
		WHERE CHATTING_NO = #{chattingNo}
		AND SENDER_TYPE = #{senderType}
		AND TARGET_NO = #{memberNo}
	</update>
	
	
	
	
	<!-- 챗봇-주문정보 -->
	<select id="orderInfo">		
		SELECT O.MERCHANT_UID ,TO_CHAR(ORDER_DATE,'YYYY-MM-DD') ORDER_DATE, D.ORDER_STATUS, ORDER_QUANTITY, ORDER_PRICE,P.PRODUCT_NAME, 
		(LISTAGG(OPTION_VALUE,',') WITHIN GROUP (ORDER BY T.OPTION_NO)) OPTION_VALUE 
		FROM ORDERS O
		LEFT JOIN ORDER_DETAIL D ON(O.ORDER_NO = D.ORDER_NO)
		LEFT JOIN PRODUCT P ON(D.PRODUCT_NO = P.PRODUCT_NO)
		LEFT JOIN PAYMENT PM ON O.ORDER_NO = PM.ORDER_NO
		LEFT JOIN ORDERDETAIL_OPTION O2 ON(O2.ORDER_ITEM_NO = D.ORDER_ITEM_NO)
		LEFT JOIN "OPTION" T ON(T.OPTION_NO=O2.OPTION_NO)
		WHERE O.MEMBER_NO = #{memberNo}
		AND O.MERCHANT_UID=#{value}
		AND ORDER_DEL_FL = 'N'
		GROUP BY 
		     O.MERCHANT_UID, O.ORDER_NO, O.ORDER_DATE, D.ORDER_STATUS, O.ORDER_DEL_FL, 
		    D.ORDER_ITEM_NO, D.ORDER_QUANTITY, D.ORDER_PRICE, D.PRODUCT_NO, 
		    P.PRODUCT_NAME, PM.BUYER_ADDR, O.MEMBER_NO
		ORDER BY ORDER_DATE DESC
	</select>
</mapper>
